@page "/Calendaring"
@using blazor.famely.calendar.Data.CalendarData
@using blazor.famely.calendar.Data.Repositories
@inject IDialogService DialogService
@inherits OwningComponentBase


<h3>Calendaring</h3>

<MudCalendar
    Items="_events"
    EnableDragItems="true"
    CellClicked="CellClicked"
    ItemClicked="ItemClicked"
    DayTimeInterval="CalendarTimeInterval.Minutes15"
    MonthCellMinHeight="100">
    <CellTemplate>
        <div style="width: 100%; height: 100%; border: 2px solid @GetColor(((Event)context).Color)">
            <div style="background-color: @GetColor(((Event)context).Color)">
                <MudText Style="color: #ffffff;" Typo="Typo.body1" Align="Align.Center">@(((Event)context).Title)</MudText>
            </div>
            <div class="pa-2">
                <MudText Typo="Typo.body2">@context.Text</MudText>
            </div>
        </div>
    </CellTemplate>
</MudCalendar>

@code{
    private EfRepository Repository;
    private List<Event> _events;

    private string GetColor(Color color)
    {
        return $"var(--mud-palette-{color.ToDescriptionString()})";
    }

    protected override void OnInitialized()
    {
        Repository = ScopedServices.GetRequiredService<EfRepository>();
        _events = Repository.GetAllAsync().Result.ToList();
    }


    private void CellClicked(DateTime dateTime)
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.ShowMessageBox("Cell Clicked", dateTime.ToString(Thread.CurrentThread.CurrentCulture), options: options);
    }

    private void ItemClicked(CalendarItem item)
    {
        var newItem = item as Event;
        DialogService.ShowMessageBox($"{newItem!.Title}", item.Text);
    }

}