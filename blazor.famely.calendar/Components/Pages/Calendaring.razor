@page "/Calendaring"
@using blazor.famely.calendar.Data.CalendarData
@inject IDialogService DialogService


<h3>Calendaring</h3>

<MudCalendar
    Items="_events"
    EnableDragItems="true"
    CellClicked="CellClicked"
    ItemClicked="ItemClicked"
    DayTimeInterval="CalendarTimeInterval.Minutes15"
    MonthCellMinHeight="100">
    <CellTemplate>
        <div style="width: 100%; height: 100%; border: 2px solid @GetColor(((CustomItem)context).Color)">
            <div style="background-color: @GetColor(((CustomItem)context).Color)">
                <MudText Style="color: #ffffff;" Typo="Typo.body1" Align="Align.Center">@(((CustomItem)context).Title)</MudText>
            </div>
            <div class="pa-2">
                <MudText Typo="Typo.body2">@context.Text</MudText>
            </div>
        </div>
    </CellTemplate>
</MudCalendar>

@code{

    private string GetColor(Color color) => $"var(--mud-palette-{color.ToDescriptionString()})";


    private List<CustomItem> _events = new()
    {
        new CustomItem
        {
            Start = DateTime.Today.AddHours(10),
            End = DateTime.Today.AddHours(11),
            Title = "Event today",
            Location = "Over here",
            Text = "This is an event today",
            Color = Color.Secondary
        },
        new CustomItem
        {
            Start = DateTime.Today.AddDays(1).AddHours(11),
            End = DateTime.Today.AddDays(1).AddHours(12.5),
            Title = "Event tomorrow",
            Location = "Over there",
            Text = "This is an event tomorrow",
            Color = Color.Tertiary
        }
    };


    private void CellClicked(DateTime dateTime)
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.ShowMessageBox("Cell Clicked", dateTime.ToString(Thread.CurrentThread.CurrentCulture), options: options);
    }

    private void ItemClicked(CalendarItem item)
    {
        var newItem = item as CustomItem;
        DialogService.ShowMessageBox($"{newItem!.Title}", item.Text);
    }

}